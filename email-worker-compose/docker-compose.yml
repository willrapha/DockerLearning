version: '3'
volumes:
  dados:
networks:
  banco:
  web:
  fila:
services:
  ## db - serviço de banco de dados
  db:
    image: postgres:9.6
    volumes:
      # Volume dos dados
      - dados:/var/lib/postgresql/data
      # Scripts - mapeamos a nossa pasta script para dentro do nosso container a uma pasta tbm chamada scripts
      - ./scripts:/scripts
      # mapeamos o ./scripts/init.sql para um caminho em nosso container
      # docker-entrypoint-initdb.d - padrao de nomenclatura do postgres
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      ## db faz parte da rede banco
    networks:
      - banco
  ## frontend
  frontend:
    image: nginx:1.13
    volumes:
      # Site
      - ./web:/usr/share/nginx/html/
      # Configuração do proxy reverso 
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    ## frontend faz parte da rede web mas depende da app
    networks:
      - web
    depends_on:
      - app
  ## backend
  app:
    image: python:3.6
    volumes:
      # Aplicação
      - ./app:/app
    ## diretorio de execução dentro do container
    working_dir: /app
    ## comando que queremos executar - colocamos o 'bash' devido a permissão para executar o nosso app.sh
    command: bash ./app.sh
    ## app faz parte da rede banco e web mas depende da db
    networks:
      - banco
      - web
      - fila
    depends_on:
      - db
      - queue
  queue:
    image: redis:3.2
    networks: 
      - fila
  worker:
    image: python:3.6
    volumes: 
      # Worker
      - ./worker:/worker
    working_dir: /worker
    command: bash ./app.sh
    networks:
      - fila
    depends_on: 
      - queue
